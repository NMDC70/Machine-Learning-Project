{"name":"Machine-learning-project","tagline":"Coursera Project _ Machine Learning ","body":"---\r\noutput: html_document\r\n---\r\n# Machine Learning Project\r\nCoursera Project Machine Learning \r\n---\r\ntitle: \"Machine Learning Project\"\r\nauthor: \"NMDC\"\r\ndate: \"November 17, 2015\"\r\n\r\n---\r\n\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\r\n\r\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nprojtrain <- read.csv(\"pml-training.csv\")\r\nprojtrain2 <- projtrain\r\nprojtrain2[projtrain2 == \"#DIV/0!\" | projtrain2 == \"\"] <- NA\r\ninttrainset <- projtrain2[, !(colMeans(is.na(projtrain2)) > 0.5)]\r\ninttrainset <- inttrainset[complete.cases(inttrainset), ]\r\nlibrary(mlbench)\r\nlibrary(caret)\r\ncorrelationMatrix <- cor(inttrainset[,8:59])\r\nhighlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.75)\r\nfilteredDescr <- inttrainset[,-(highlyCorrelated + 7)]\r\nfilteredDescr1 <- filteredDescr[, -c(1,3,4,5)]\r\nfilteredDescr2 <- filteredDescr1[, -2]\r\nintrain <- createDataPartition(y = filteredDescr2$classe, p = 0.7, list = FALSE)\r\nmytrain <- filteredDescr2[intrain, ]\r\nmytest <- filteredDescr2[-intrain, ]\r\ntestset <- read.csv(\"pml-testing.csv\")\r\nlibrary(foreach)\r\nlibrary(doParallel)\r\nregisterDoParallel(4)\r\n##output <- train(classe ~ ., data = dataSet, trControl = trainControl(method = \"cv\", number = 3))\r\n##importance <- varImp(output, scale=FALSE)\r\n##print(importance)\r\n##plot(importance)\r\n```\r\n\r\n\r\n```{r eval=FALSE}\r\nset.seed(1001)\r\nmodelrf <- train(classe ~ ., data = mytrain, trControl = trainControl(method = \"cv\", number = 10))\r\nimportance <- varImp(output, scale=FALSE)\r\nprint(importance)\r\nplot(importance)\r\nconfusionMatrix(modelrf)\r\noutput$finalModel\r\npredrf <- predict(modelrf, newdata = mytest)\r\ncompmytest <- mytest\r\ncompmytest$predright <- predrf == compmytest$classe\r\nsum(compmytest$predright)/ nrow(compmytest)\r\n```\r\n\r\n\r\n```{r eval=FALSE}\r\n## for future research\r\n##control <- trainControl(method=\"repeatedcv\", number=10, repeats=3)\r\n##model <- train(diabetes~., data=PimaIndiansDiabetes, method=\"lvq\", preProcess=\"scale\", trControl=control)\r\n##\r\n## RFE - Recursive feature elimination\r\ncontrol <- rfeControl(functions=rfFuncs, method=\"cv\", number=10)\r\nresults <- rfe(filteredDescr[,1:37], filteredDescr[,38], sizes=c(1:37), rfeControl=control)\r\nplot(results, type=c(\"g\", \"o\"))\r\n```\r\n\r\n\r\n```{r eval=FALSE}\r\nset.seed(1001)\r\ncontrol <- trainControl(method=\"repeatedcv\", number=10, repeats=3)\r\nmodellvq1 <- train(classe ~ ., data = mytrain, method=\"lvq\", trControl=control, tuneLength= 5)\r\npredlvq1 <- predict(modellvq1, newdata = mytest)\r\ncompmytestlvq <- mytest\r\ncompmytestlvq$predright <- predlvq1 == compmytestlvq$classe\r\nsum(compmytestlvq$predright)/ nrow(compmytestlvq)\r\n```\r\n\r\n\r\n```{r eval=FALSE}\r\n## with Preprocess\r\nset.seed(1001)\r\ncontrol <- trainControl(method=\"repeatedcv\", number=10, repeats=3)\r\nmodellvq2 <- train(classe ~ ., data = mytrain, method=\"lvq\", preProcess=\"scale\", trControl=control, tuneLength = 5)\r\npredlvq2 <- predict(modellvq2, newdata = mytest)\r\ncompmytestlvq2 <- mytest\r\ncompmytestlvq2$predright <- predlvq2 == compmytestlvq2$classe\r\nsum(compmytestlvq2$predright)/ nrow(compmytestlvq2)\r\n\r\n## LVQ is not the right approach for this data set\r\n```\r\n\r\n\r\n```{r eval=FALSE}\r\nset.seed(1001)\r\n\r\nfitControl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10)\r\nmodelgbm <- train(classe ~., data = mytrain, methos = \"gbm\", trControl = fitControl, verbose = FALSE)\r\n```\r\n\r\nYou can also embed plots, for example:\r\n\r\n```{r, echo=FALSE}\r\nplot(cars)\r\n```\r\n\r\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n***\r\n\r\n***\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}